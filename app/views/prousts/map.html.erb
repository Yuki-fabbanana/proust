<style>
  #sample {
    height: 100vh;
  }
</style>
<div id="sample"></div>

<script>
// var map;
// var marker;
// var center = {
//   lat: 34.7019399, // 緯度
//   lng: 135.51002519999997 // 経度
// };
// function initMap() {
//   map = new google.maps.Map(document.getElementById('sample'), { // #sampleに地図を埋め込む
//     center: center, // 地図の中心を指定
//     zoom: 5 // 地図のズームを指定
//   });

//   marker = new google.maps.Marker({ // マーカーの追加
//         position: center, // マーカーを立てる位置を指定
//       map: map // マーカーを立てる地図を指定
//    });

//   infoWindow = new google.maps.InfoWindow({ // 吹き出しの追加
//         content: '<div class="sample">TAM 大阪</div>' // 吹き出しに表示する内容
//   });
//   marker.addListener('click', function() { // マーカーをクリックしたとき
//     infoWindow.open(map, marker); // 吹き出しの表示
//   });


///////実験///////実験///////実験///////実験///////実験///////実験///////実験///////
var map;
var marker = [];
var infoWindow = [];
var postInfomation = {};

// var markerData = []
// // for文
// for (var i = 0; i < gon.posts.length; i++ ) {
//   var postInfomation

//   markerData.push();
// }

////////

var markerData = [ // マーカーを立てる場所名・緯度・経度
  {
       addr: 'TAM 東京',
       lat: 35.6954806,
        lng: 139.76325010000005,
        // icon: 'tam.png' // TAM 東京のマーカーだけイメージを変更する
 }, {
        addr: '小川町駅',
     lat: 35.6951212,
        lng: 139.76610649999998
 }, {
        addr: '淡路町駅',
     lat: 35.69496,
      lng: 139.76746000000003
 }, {
        addr: '御茶ノ水駅',
        lat: 35.6993529,
        lng: 139.76526949999993
 }, {
        addr: '神保町駅',
     lat: 35.695932,
     lng: 139.75762699999996
 }
 // , {
 //        addr: gon.posts.address,
 //       lat: parseFloat(gon.posts.latitude),
 //     lng: parseFloat(gon.posts.longitude)
 // }
];

debugger
function initMap() {
 // 地図の作成
    var mapLatLng = new google.maps.LatLng({lat: markerData[0]['lat'], lng: markerData[0]['lng']}); // 緯度経度のデータ作成
   map = new google.maps.Map(document.getElementById('sample'), { // #sampleに地図を埋め込む
     center: mapLatLng, // 地図の中心を指定
      zoom: 12 // 地図のズームを指定
   });

 // マーカー毎の処理
 // for (var i = 0; i < markerData.length; i++) {
 //        markerLatLng = new google.maps.LatLng({lat: markerData[i]['lat'], lng: markerData[i]['lng']}); // 緯度経度のデータ作成
 //        console.log(markerLatLng);
 //        marker[i] = new google.maps.Marker({ // マーカーの追加
 //         position: markerLatLng, // マーカーを立てる位置を指定
 //            map: map // マーカーを立てる地図を指定
 //       });

 //     infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
 //         content: '<div class="sample">' + markerData[i]['addr'] + '</div>' // 吹き出しに表示する内容
 //       });

 //     markerEvent(i); // マーカーにクリックイベントを追加
 // }

 ///////////////
 for (var i = 0; i < gon.posts.length; i++) {
        console.log(parseFloat(gon.posts[i]['latitude']));
        console.log(parseFloat(gon.posts[i]['longitude']));
        markerLatLng = new google.maps.LatLng({ lat: parseFloat(gon.posts[i]['latitude']), lng: parseFloat(gon.posts[i]['longitude']) }); // 緯度経度のデータ作成
        console.log(markerLatLng);
        marker[i] = new google.maps.Marker({ // マーカーの追加
         position: markerLatLng, // マーカーを立てる位置を指定
            map: map // マーカーを立てる地図を指定
       });

     infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
         content: '<div class="sample">' + '<h1>' + gon.posts[i]['address'] + '</h1>' + '<h1 id="firstHeading" class="firstHeading">Tokyoだべ</h1>' + '</div>' // 吹き出しに表示する内容
       });

     markerEvent(i); // マーカーにクリックイベントを追加
 }


 //////////////

   // marker[0].setOptions({// TAM 東京のマーカーのオプション設定
   //      icon: {
   //       url: markerData[0]['icon']// マーカーの画像を変更
   //     }
   // });
}

// マーカーにクリックイベントを追加 closeなしver
// function markerEvent(i) {
//     marker[i].addListener('click', function() { // マーカーをクリックしたとき
//       infoWindow[i].open(map, marker[i]); // 吹き出しの表示
//   });
// }

// マーカーにクリックイベントを追加
var currentInfoWindow = null;
function markerEvent(i) {
  marker[i].addListener('click', function() { // マーカーをクリックしたとき
    if (currentInfoWindow) {
      currentInfoWindow.close();
    }
    //情報ウィンドウを開く
    infoWindow[i].open(map, marker[i]); // 吹き出しの表示
    currentInfoWindow = infoWindow[i];
  });
}
///////実験///////実験///////実験///////実験///////実験///////実験///////実験///////
// }
</script>

</script>
  <script src="https://maps.googleapis.com/maps/api/js?language=ja&region=JP&key=#{TODO}&callback=initMap"
async defer>
</script>
